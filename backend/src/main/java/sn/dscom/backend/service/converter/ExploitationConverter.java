package sn.dscom.backend.service.converter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import sn.dscom.backend.common.dto.DepotDTO;
import sn.dscom.backend.common.dto.ExploitationDTO;
import sn.dscom.backend.common.dto.ProduitDTO;
import sn.dscom.backend.database.entite.DepotEntity;
import sn.dscom.backend.database.entite.ExploitationEntity;

import javax.validation.Valid;
import java.util.Date;

@Component
public class ExploitationConverter {
    @Autowired
    ExploitationConverter(){super();}
    public static ExploitationDTO toExploitationDTO(@Valid ExploitationEntity exploitationEntity) {
        //todo
        if (exploitationEntity == null) {
            return null;
        }
        ExploitationDTO exploitationDTO=ExploitationDTO.builder()
                .id(exploitationEntity.getId())
                .nom(exploitationEntity.getNom())
                .region(exploitationEntity.getRegion())
                .dateCreation(exploitationEntity.getId() == null ? new Date() :exploitationEntity.getDateCreation())
                .dateModification(exploitationEntity == null ? null :exploitationEntity.getDateCreation())
                .build();
        return exploitationDTO;
    }
    public static ExploitationEntity toExploitationEntity(ExploitationDTO exploitationDTO) {
        // todo
        if (exploitationDTO == null) {
            return null;
        }
        ExploitationEntity exploitationEntity=ExploitationEntity.builder()
                .id(exploitationDTO.getId())
                .nom(exploitationDTO.getNom())
                .region(exploitationDTO.getRegion())
                .dateCreation(exploitationDTO.getId() == null ? new Date() :exploitationDTO.getDateCreation())
                .dateModification(exploitationDTO == null ? null :exploitationDTO.getDateCreation())
                .build();
        return exploitationEntity;
    }
}
